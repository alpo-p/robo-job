// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatRowsScreen should match snapshot 1`] = `
<RNCSafeAreaView>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f1f1f1",
          "borderRadius": 8,
          "flexDirection": "row",
          "height": 32,
          "margin": 16,
        },
        Object {},
      ]
    }
  >
    <Text />
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(28, 28, 30, 0.4)"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "color": "#000000",
          "width": "70%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderBottomColor": "#000000",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "width": "33%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "DamascusBold",
            "fontSize": 14,
            "marginBottom": 8,
            "marginRight": 8,
            "textTransform": "none",
          }
        }
      >
        All
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderBottomColor": "#000000",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "width": "33%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Damascus",
            "fontSize": 14,
            "marginBottom": 8,
            "marginRight": 8,
            "textTransform": "none",
          }
        }
      >
        Unread
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderBottomColor": "#000000",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "width": "33%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Damascus",
            "fontSize": 14,
            "marginBottom": 8,
            "marginRight": 8,
            "textTransform": "none",
          }
        }
      >
        Unfinished
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "marginTop": 8,
      }
    }
  />
</RNCSafeAreaView>
`;
